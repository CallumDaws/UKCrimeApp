@inject AppState appState
@inject CrimeDataService CrimeDataService
@page "/category-details/{CategoryName}"
@using UKCrimeApp.Models;
@using UKCrimeApp.Services;


@if (crimesInCategory != null && crimesInCategory.Any())
{
    <h2>Crimes in "@CategoryName" Category</h2>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Category</th>
                <th>Location</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var crime in crimesInCategory)
            {
                <tr>
                    <td>@crime.Id</td>
                    <td>@crime.Category</td>
                    <td>@crime.Location.Street.Name</td>
                    <td><a href="/crime-detail/@crime.persistent_id">View Details</a></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No crimes found in this category.</p>
}


@code {
    [Parameter]
    public string CategoryName { get; set; }

    private List<CrimeData> crimesInCategory;

    protected override async Task OnInitializedAsync()
    {
        var searchModel = appState.CurrentSearch; // Retrieve the search model from AppState
        var allCrimes = await CrimeDataService.GetCrimesAsync(searchModel.Latitude, searchModel.Longitude, searchModel.Date);
        crimesInCategory = allCrimes.Where(crime => crime.Category.Equals(CategoryName, StringComparison.OrdinalIgnoreCase)).ToList();

    }
}