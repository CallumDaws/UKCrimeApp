@using System.Text.Json;
@using UKCrimeApp.Models;
@inject IJSRuntime JSRuntime
@implements IDisposable

<div id="map" style="height: 400px;"></div>

@code {
    private IJSObjectReference _module;
    public List<CrimeData> Crimes { get; set; } // Assume this is populated appropriately

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/MapInterop.js");

            // Serialize your crimes list to JSON here so you can easily pass it to JavaScript
            var crimesJson = JsonSerializer.Serialize(Crimes, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase });
            await _module.InvokeVoidAsync("initializeMap", "map", crimesJson);
        }
    }

    public void Dispose()
    {
        _module?.DisposeAsync();
    }
}
